/*
 * httpserver.cpp
 *
 *  Created on: Mar 19, 2019
 *      Author: akki
 */

#include "httpserver.h"
#include <sys/socket.h>
#include <netinet/in.h>
#include <string.h>

httpserver::httpserver()
{
	// TODO Auto-generated constructor stub

}

httpserver::~httpserver()
{
	// TODO Auto-generated destructor stub
}

int httpserver::startServer(int port)
{
	int server_fd, new_socket, valread;
	struct sockaddr_in address;
	int opt = 1;
	int addrlen = sizeof(address);
	char buffer[1024] = {0};
	char *hello = "Hello from server";

	// Creating socket file descriptor
	if ((server_fd = socket(AF_INET, SOCK_STREAM, 0)) == 0)
	{
		perror("socket failed");
		exit(EXIT_FAILURE);
	}

	// Forcefully attaching socket to the port 8080
	if (setsockopt(server_fd, SOL_SOCKET, SO_REUSEADDR | SO_REUSEPORT,
												  &opt, sizeof(opt)))
	{
		perror("setsockopt");
		exit(EXIT_FAILURE);
	}

	return 0;
}

void httpserver::addHandle(HTTP_METHOD method,(void*)(*handle)(void*))
{
	switch (method)
	{
	case eGET:
		mGetHandle = handle;
		break;
	case ePut:
		break;
	case ePost:
		break;
	case default:
		std::cout << "unsupported HTTP method" << std::endl;
	}
}


